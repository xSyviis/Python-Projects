import pandas as pd
from sigma.parser import SigmaCollectionParser
from sigma.config.mapping import FieldMapping

# Define the path to the CSV file containing the web server logs
csv_path = "webserver_logs.csv"

# Define the path to the Sigma rules directory
rules_dir = "/path/to/sigma/rules/web/webserver_generic/"

# Load the Sigma rules into memory
parser = SigmaCollectionParser(rules_dir, False)

# Create a DataFrame to store the results
results = pd.DataFrame(columns=["rule_id", "rule_title", "timestamp"])

# Read in the web server logs CSV file
logs = pd.read_csv(csv_path)

# Loop through each log entry and check it against the Sigma rules
for i, log in logs.iterrows():
    # Convert the log entry to a dictionary
    log_dict = log.to_dict()

    # Map the log fields to the Sigma field names
    mapping = FieldMapping(parser)
    sigma_fields = mapping.map(log_dict)

    # Check the log entry against each Sigma rule
    for rule in parser.get_rules():
        if rule.match(sigma_fields):
            # If the log entry matches a Sigma rule, add it to the results DataFrame
            results = results.append({"rule_id": rule.id, "rule_title": rule.title, "timestamp": log_dict["timestamp"]}, ignore_index=True)

# Write the results to a new CSV file
results.to_csv("sigma_detection_results.csv", index=False)
